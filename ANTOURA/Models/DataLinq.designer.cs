#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ANTOURA.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ANTOURA")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertwebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Updatewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Deletewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void InsertAssocClassSection(AssocClassSection instance);
    partial void UpdateAssocClassSection(AssocClassSection instance);
    partial void DeleteAssocClassSection(AssocClassSection instance);
    partial void InsertAssocTeacherCourse(AssocTeacherCourse instance);
    partial void UpdateAssocTeacherCourse(AssocTeacherCourse instance);
    partial void DeleteAssocTeacherCourse(AssocTeacherCourse instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertPeriod(Period instance);
    partial void UpdatePeriod(Period instance);
    partial void DeletePeriod(Period instance);
    partial void InsertSysParamLov(SysParamLov instance);
    partial void UpdateSysParamLov(SysParamLov instance);
    partial void DeleteSysParamLov(SysParamLov instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertExamenGrade(ExamenGrade instance);
    partial void UpdateExamenGrade(ExamenGrade instance);
    partial void DeleteExamenGrade(ExamenGrade instance);
    partial void InsertExamen(Examen instance);
    partial void UpdateExamen(Examen instance);
    partial void DeleteExamen(Examen instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ANTOURAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<AssocClassSection> AssocClassSections
		{
			get
			{
				return this.GetTable<AssocClassSection>();
			}
		}
		
		public System.Data.Linq.Table<AssocTeacherCourse> AssocTeacherCourses
		{
			get
			{
				return this.GetTable<AssocTeacherCourse>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Period> Periods
		{
			get
			{
				return this.GetTable<Period>();
			}
		}
		
		public System.Data.Linq.Table<SysParamLov> SysParamLovs
		{
			get
			{
				return this.GetTable<SysParamLov>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<ExamenGrade> ExamenGrades
		{
			get
			{
				return this.GetTable<ExamenGrade>();
			}
		}
		
		public System.Data.Linq.Table<Examen> Examens
		{
			get
			{
				return this.GetTable<Examen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public webpages_UsersInRole()
		{
			this._webpages_Role = default(EntityRef<webpages_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssocClassSection")]
	public partial class AssocClassSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idClass;
		
		private string _section;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<AssocTeacherCourse> _AssocTeacherCourses;
		
		private EntityRef<Class> _Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidClassChanging(int value);
    partial void OnidClassChanged();
    partial void OnsectionChanging(string value);
    partial void OnsectionChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public AssocClassSection()
		{
			this._AssocTeacherCourses = new EntitySet<AssocTeacherCourse>(new Action<AssocTeacherCourse>(this.attach_AssocTeacherCourses), new Action<AssocTeacherCourse>(this.detach_AssocTeacherCourses));
			this._Class = default(EntityRef<Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClass", DbType="Int NOT NULL")]
		public int idClass
		{
			get
			{
				return this._idClass;
			}
			set
			{
				if ((this._idClass != value))
				{
					this.OnidClassChanging(value);
					this.SendPropertyChanging();
					this._idClass = value;
					this.SendPropertyChanged("idClass");
					this.OnidClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string section
		{
			get
			{
				return this._section;
			}
			set
			{
				if ((this._section != value))
				{
					this.OnsectionChanging(value);
					this.SendPropertyChanging();
					this._section = value;
					this.SendPropertyChanged("section");
					this.OnsectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocClassSection_AssocTeacherCourse", Storage="_AssocTeacherCourses", ThisKey="id", OtherKey="idClassSection")]
		public EntitySet<AssocTeacherCourse> AssocTeacherCourses
		{
			get
			{
				return this._AssocTeacherCourses;
			}
			set
			{
				this._AssocTeacherCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_AssocClassSection", Storage="_Class", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.AssocClassSection = null;
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.AssocClassSection = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssocTeacherCourses(AssocTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.AssocClassSection = this;
		}
		
		private void detach_AssocTeacherCourses(AssocTeacherCourse entity)
		{
			this.SendPropertyChanging();
			entity.AssocClassSection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssocTeacherCourse")]
	public partial class AssocTeacherCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idTeacher;
		
		private int _idCourse;
		
		private int _idClassSection;
		
		private System.Nullable<int> _idPeriod;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Examen> _Examens;
		
		private EntityRef<AssocClassSection> _AssocClassSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidTeacherChanging(int value);
    partial void OnidTeacherChanged();
    partial void OnidCourseChanging(int value);
    partial void OnidCourseChanged();
    partial void OnidClassSectionChanging(int value);
    partial void OnidClassSectionChanged();
    partial void OnidPeriodChanging(System.Nullable<int> value);
    partial void OnidPeriodChanged();
    #endregion
		
		public AssocTeacherCourse()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Examens = new EntitySet<Examen>(new Action<Examen>(this.attach_Examens), new Action<Examen>(this.detach_Examens));
			this._AssocClassSection = default(EntityRef<AssocClassSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeacher", DbType="Int NOT NULL")]
		public int idTeacher
		{
			get
			{
				return this._idTeacher;
			}
			set
			{
				if ((this._idTeacher != value))
				{
					this.OnidTeacherChanging(value);
					this.SendPropertyChanging();
					this._idTeacher = value;
					this.SendPropertyChanged("idTeacher");
					this.OnidTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int NOT NULL")]
		public int idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClassSection", DbType="Int NOT NULL")]
		public int idClassSection
		{
			get
			{
				return this._idClassSection;
			}
			set
			{
				if ((this._idClassSection != value))
				{
					if (this._AssocClassSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClassSectionChanging(value);
					this.SendPropertyChanging();
					this._idClassSection = value;
					this.SendPropertyChanged("idClassSection");
					this.OnidClassSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPeriod", DbType="Int")]
		public System.Nullable<int> idPeriod
		{
			get
			{
				return this._idPeriod;
			}
			set
			{
				if ((this._idPeriod != value))
				{
					this.OnidPeriodChanging(value);
					this.SendPropertyChanging();
					this._idPeriod = value;
					this.SendPropertyChanged("idPeriod");
					this.OnidPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocTeacherCourse_Agenda", Storage="_Agendas", ThisKey="id", OtherKey="idAssTeacherCourse")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocTeacherCourse_Examen", Storage="_Examens", ThisKey="id", OtherKey="idAssocTeacherCourse")]
		public EntitySet<Examen> Examens
		{
			get
			{
				return this._Examens;
			}
			set
			{
				this._Examens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocClassSection_AssocTeacherCourse", Storage="_AssocClassSection", ThisKey="idClassSection", OtherKey="id", IsForeignKey=true)]
		public AssocClassSection AssocClassSection
		{
			get
			{
				return this._AssocClassSection.Entity;
			}
			set
			{
				AssocClassSection previousValue = this._AssocClassSection.Entity;
				if (((previousValue != value) 
							|| (this._AssocClassSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssocClassSection.Entity = null;
						previousValue.AssocTeacherCourses.Remove(this);
					}
					this._AssocClassSection.Entity = value;
					if ((value != null))
					{
						value.AssocTeacherCourses.Add(this);
						this._idClassSection = value.id;
					}
					else
					{
						this._idClassSection = default(int);
					}
					this.SendPropertyChanged("AssocClassSection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.AssocTeacherCourse = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.AssocTeacherCourse = null;
		}
		
		private void attach_Examens(Examen entity)
		{
			this.SendPropertyChanging();
			entity.AssocTeacherCourse = this;
		}
		
		private void detach_Examens(Examen entity)
		{
			this.SendPropertyChanging();
			entity.AssocTeacherCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _description;
		
		private string _description2;
		
		private string _cycle;
		
		private EntityRef<AssocClassSection> _AssocClassSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ondescription2Changing(string value);
    partial void Ondescription2Changed();
    partial void OncycleChanging(string value);
    partial void OncycleChanged();
    #endregion
		
		public Class()
		{
			this._AssocClassSection = default(EntityRef<AssocClassSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description2", DbType="NVarChar(50)")]
		public string description2
		{
			get
			{
				return this._description2;
			}
			set
			{
				if ((this._description2 != value))
				{
					this.Ondescription2Changing(value);
					this.SendPropertyChanging();
					this._description2 = value;
					this.SendPropertyChanged("description2");
					this.Ondescription2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cycle", DbType="NVarChar(50)")]
		public string cycle
		{
			get
			{
				return this._cycle;
			}
			set
			{
				if ((this._cycle != value))
				{
					this.OncycleChanging(value);
					this.SendPropertyChanging();
					this._cycle = value;
					this.SendPropertyChanged("cycle");
					this.OncycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_AssocClassSection", Storage="_AssocClassSection", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public AssocClassSection AssocClassSection
		{
			get
			{
				return this._AssocClassSection.Entity;
			}
			set
			{
				AssocClassSection previousValue = this._AssocClassSection.Entity;
				if (((previousValue != value) 
							|| (this._AssocClassSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssocClassSection.Entity = null;
						previousValue.Class = null;
					}
					this._AssocClassSection.Entity = value;
					if ((value != null))
					{
						value.Class = this;
					}
					this.SendPropertyChanged("AssocClassSection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Period")]
	public partial class Period : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _day;
		
		private System.TimeSpan _fromHour;
		
		private System.TimeSpan _toHour;
		
		private string _year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndayChanging(string value);
    partial void OndayChanged();
    partial void OnfromHourChanging(System.TimeSpan value);
    partial void OnfromHourChanged();
    partial void OntoHourChanging(System.TimeSpan value);
    partial void OntoHourChanged();
    partial void OnyearChanging(string value);
    partial void OnyearChanged();
    #endregion
		
		public Period()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromHour", DbType="Time NOT NULL")]
		public System.TimeSpan fromHour
		{
			get
			{
				return this._fromHour;
			}
			set
			{
				if ((this._fromHour != value))
				{
					this.OnfromHourChanging(value);
					this.SendPropertyChanging();
					this._fromHour = value;
					this.SendPropertyChanged("fromHour");
					this.OnfromHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toHour", DbType="Time NOT NULL")]
		public System.TimeSpan toHour
		{
			get
			{
				return this._toHour;
			}
			set
			{
				if ((this._toHour != value))
				{
					this.OntoHourChanging(value);
					this.SendPropertyChanging();
					this._toHour = value;
					this.SendPropertyChanged("toHour");
					this.OntoHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysParamLov")]
	public partial class SysParamLov : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _lang;
		
		private string _code;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlangChanging(string value);
    partial void OnlangChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SysParamLov()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lang
		{
			get
			{
				return this._lang;
			}
			set
			{
				if ((this._lang != value))
				{
					this.OnlangChanging(value);
					this.SendPropertyChanging();
					this._lang = value;
					this.SendPropertyChanged("lang");
					this.OnlangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public webpages_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idAssTeacherCourse;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private System.Nullable<System.DateTime> _dateModified;
		
		private EntityRef<AssocTeacherCourse> _AssocTeacherCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAssTeacherCourseChanging(System.Nullable<int> value);
    partial void OnidAssTeacherCourseChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OndateModifiedChanged();
    #endregion
		
		public Agenda()
		{
			this._AssocTeacherCourse = default(EntityRef<AssocTeacherCourse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAssTeacherCourse", DbType="Int")]
		public System.Nullable<int> idAssTeacherCourse
		{
			get
			{
				return this._idAssTeacherCourse;
			}
			set
			{
				if ((this._idAssTeacherCourse != value))
				{
					if (this._AssocTeacherCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAssTeacherCourseChanging(value);
					this.SendPropertyChanging();
					this._idAssTeacherCourse = value;
					this.SendPropertyChanged("idAssTeacherCourse");
					this.OnidAssTeacherCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocTeacherCourse_Agenda", Storage="_AssocTeacherCourse", ThisKey="idAssTeacherCourse", OtherKey="id", IsForeignKey=true)]
		public AssocTeacherCourse AssocTeacherCourse
		{
			get
			{
				return this._AssocTeacherCourse.Entity;
			}
			set
			{
				AssocTeacherCourse previousValue = this._AssocTeacherCourse.Entity;
				if (((previousValue != value) 
							|| (this._AssocTeacherCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssocTeacherCourse.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._AssocTeacherCourse.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._idAssTeacherCourse = value.id;
					}
					else
					{
						this._idAssTeacherCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("AssocTeacherCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamenGrades")]
	public partial class ExamenGrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idExamen;
		
		private int _idStudent;
		
		private System.Nullable<decimal> _grade;
		
		private string _comment;
		
		private EntityRef<Examen> _Examen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidExamenChanging(int value);
    partial void OnidExamenChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OngradeChanging(System.Nullable<decimal> value);
    partial void OngradeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public ExamenGrade()
		{
			this._Examen = default(EntityRef<Examen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExamen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idExamen
		{
			get
			{
				return this._idExamen;
			}
			set
			{
				if ((this._idExamen != value))
				{
					if (this._Examen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidExamenChanging(value);
					this.SendPropertyChanging();
					this._idExamen = value;
					this.SendPropertyChanged("idExamen");
					this.OnidExamenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Examen_ExamenGrade", Storage="_Examen", ThisKey="idExamen", OtherKey="id", IsForeignKey=true)]
		public Examen Examen
		{
			get
			{
				return this._Examen.Entity;
			}
			set
			{
				Examen previousValue = this._Examen.Entity;
				if (((previousValue != value) 
							|| (this._Examen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Examen.Entity = null;
						previousValue.ExamenGrades.Remove(this);
					}
					this._Examen.Entity = value;
					if ((value != null))
					{
						value.ExamenGrades.Add(this);
						this._idExamen = value.id;
					}
					else
					{
						this._idExamen = default(int);
					}
					this.SendPropertyChanged("Examen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Examen")]
	public partial class Examen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idAssocTeacherCourse;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private System.Nullable<System.DateTime> _dateModified;
		
		private string _title;
		
		private System.Nullable<int> _overGrade;
		
		private EntitySet<ExamenGrade> _ExamenGrades;
		
		private EntityRef<AssocTeacherCourse> _AssocTeacherCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAssocTeacherCourseChanging(System.Nullable<int> value);
    partial void OnidAssocTeacherCourseChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OndateModifiedChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnoverGradeChanging(System.Nullable<int> value);
    partial void OnoverGradeChanged();
    #endregion
		
		public Examen()
		{
			this._ExamenGrades = new EntitySet<ExamenGrade>(new Action<ExamenGrade>(this.attach_ExamenGrades), new Action<ExamenGrade>(this.detach_ExamenGrades));
			this._AssocTeacherCourse = default(EntityRef<AssocTeacherCourse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAssocTeacherCourse", DbType="Int")]
		public System.Nullable<int> idAssocTeacherCourse
		{
			get
			{
				return this._idAssocTeacherCourse;
			}
			set
			{
				if ((this._idAssocTeacherCourse != value))
				{
					if (this._AssocTeacherCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAssocTeacherCourseChanging(value);
					this.SendPropertyChanging();
					this._idAssocTeacherCourse = value;
					this.SendPropertyChanged("idAssocTeacherCourse");
					this.OnidAssocTeacherCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="Date")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="Date")]
		public System.Nullable<System.DateTime> dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_overGrade", DbType="Int")]
		public System.Nullable<int> overGrade
		{
			get
			{
				return this._overGrade;
			}
			set
			{
				if ((this._overGrade != value))
				{
					this.OnoverGradeChanging(value);
					this.SendPropertyChanging();
					this._overGrade = value;
					this.SendPropertyChanged("overGrade");
					this.OnoverGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Examen_ExamenGrade", Storage="_ExamenGrades", ThisKey="id", OtherKey="idExamen")]
		public EntitySet<ExamenGrade> ExamenGrades
		{
			get
			{
				return this._ExamenGrades;
			}
			set
			{
				this._ExamenGrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssocTeacherCourse_Examen", Storage="_AssocTeacherCourse", ThisKey="idAssocTeacherCourse", OtherKey="id", IsForeignKey=true)]
		public AssocTeacherCourse AssocTeacherCourse
		{
			get
			{
				return this._AssocTeacherCourse.Entity;
			}
			set
			{
				AssocTeacherCourse previousValue = this._AssocTeacherCourse.Entity;
				if (((previousValue != value) 
							|| (this._AssocTeacherCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssocTeacherCourse.Entity = null;
						previousValue.Examens.Remove(this);
					}
					this._AssocTeacherCourse.Entity = value;
					if ((value != null))
					{
						value.Examens.Add(this);
						this._idAssocTeacherCourse = value.id;
					}
					else
					{
						this._idAssocTeacherCourse = default(Nullable<int>);
					}
					this.SendPropertyChanged("AssocTeacherCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamenGrades(ExamenGrade entity)
		{
			this.SendPropertyChanging();
			entity.Examen = this;
		}
		
		private void detach_ExamenGrades(ExamenGrade entity)
		{
			this.SendPropertyChanging();
			entity.Examen = null;
		}
	}
}
#pragma warning restore 1591
